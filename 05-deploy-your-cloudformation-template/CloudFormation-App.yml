AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Network Template: Sample template that creates a VPC with DNS and public IPs enabled.

# This template creates:
#   Security Groups
#   EC2 instance

######################
# Resources section
######################

Parameters:

  NetworkStackName:
    Description: >-
      Name of an active CloudFormation stack that contains the networking
      resources, such as the VPC and subnet that will be used in this stack.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: Lab-VPC-Stack

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large
      t3.nano, t3.micro, t3.small, t3.medium, t3.large
      m4.large, m5.large]
    ConstraintDescription: must be a valid EC2 instance type.

  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2'

Resources:

  ## Security Group

  WebSecurityGroup:  
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "WebSecurityGroup"
      GroupDescription: "Enable HTTP access"
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkStackName}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0    

  ## EC2 instance

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub ${NetworkStackName}-SubnetID
      InstanceType: !Ref 'InstanceType'
      SecurityGroupIds: [!Ref 'WebSecurityGroup']
      ImageId: !Ref 'LatestAmiId'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Install Apache Web Server and PHP 
          yum install -y php72 wget httpd24
          # Download Lab files 
          wget https://raw.githubusercontent.com/ecloudvalley/How-to-build-an-elastic-structure/master/index.php
          mv index.php /var/www/html/
          # Turn on web server 
          chkconfig httpd on 
          service httpd start
      Tags:
        - 
          Key: "Name"
          Value: "My Lab EC2"
                    
######################
# Outputs section
######################

Outputs:

  URL:
    Description: URL of the sample website
    Value: !Sub 'http://${EC2Instance.PublicDnsName}'